# config/packages/security.yaml
security:
    # Configuration des providers
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    
    # Configuration des firewalls
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
            
        api:
            pattern: ^/api
            stateless: true
            entry_point: jwt
            json_login:
                check_path: /api/auth/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            jwt: ~
            refresh_jwt:
                check_path: /api/auth/refresh
                
        main:
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
            logout:
                path: app_logout
                target: app_homepage
            
    # Contrôle d'accès
    access_control:
        # API publique
        - { path: ^/api/docs, roles: PUBLIC_ACCESS }
        - { path: ^/api/auth, roles: PUBLIC_ACCESS }
        
        # API protégée
        - { path: ^/api/loans, roles: ROLE_USER }
        - { path: ^/api/users, roles: ROLE_ADMIN }
        - { path: ^/api/admin, roles: ROLE_ADMIN }
        
        # Interface web
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/profile, roles: ROLE_USER }
        
    # Hiérarchie des rôles
    role_hierarchy:
        ROLE_LOAN_OFFICER: ROLE_USER
        ROLE_ADMIN: [ROLE_USER, ROLE_LOAN_OFFICER]
        ROLE_SUPER_ADMIN: ROLE_ADMIN

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'plaintext'
